# Система мониторинга здоровья кроликов

## Описание проекта

Прототип IoT-системы для снижения заболеваемости кроликов путем мониторинга физиологических показателей в реальном времени. Чипы на базе ESP32/Arduino (с датчиками пульса и RFID-брелоками) собирают данные (пульс, активность), передают их по HTTP на сервер, где Django-приложение обрабатывает и сохраняет информацию в MySQL (отдельные БД для пользователей и данных животных). Веб-интерфейс отображает показатели и уведомляет специалистов о проблемах. Проект включает контейнеризацию (Docker) и вклад в патент на метод измерения данных.

Этот репозиторий содержит демонстрационную версию с основным кодом во `views.py`, реализующим обработку HTTP-запросов от чипов и отображение данных.

## Цели проекта

- Мониторинг пульса и активности кроликов в реальном времени.
- Обеспечение быстрого реагирования специалистов на отклонения.
- Ведение статистики по состоянию животных.
- Планируется интеграция ИИ для анализа данных.

## Технологии

- **Hardware**: ESP32/Arduino, датчики пульса, RFID-брелоки.
- **Software**: Python, Django, MySQL, HTTP-протокол.
- **Инфраструктура**: Docker, docker-compose.
- **Языки**: Embedded C (Arduino), Python.

## Структура репозитория

- `views.py`: Основной код Django-приложения, включающий обработку HTTP-запросов от чипов, взаимодействие с MySQL (БД `users_db` и `animals_db`) и рендеринг данных для веб-интерфейса.

*Примечание*: Полная версия проекта (включая код для чипов, схемы, Dockerfile) доступна по запросу, так как этот репозиторий демонстрирует только веб-логику.

## Демонстрация

- Код во `views.py` обрабатывает входящие данные от чипов, сохраняет их в MySQL и отображает в интерфейсе.
- Скриншоты интерфейса и примеры данных доступны в папке `screenshots`.
- Видео работы прототипа доступно по запросу.

## Достижения

- Разработан end-to-end IoT-прототип, интегрирующий hardware (пайка, сенсоры) и software (Django, MySQL).
- Внесен вклад в оформление патента на метод измерения показателей.
- Подготовлена инфраструктура для масштабирования (Docker).

## Планы

- Интеграция ИИ для предсказательного анализа данных.
- Тестирование на реальных животных.
- Оптимизация энергопотребления чипов.

## Контакты

Для полной версии проекта или вопросов: Никита, telegram - @Nikita4156.
